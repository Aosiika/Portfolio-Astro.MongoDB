---
import AdminLayout from '../../layouts/AdminLayout.astro';
---

<AdminLayout title="Gestión de Proyectos">
  <div class="space-y-6">
    <!-- Cabecera con título y botón de añadir -->
    <div class="bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl shadow-lg p-6 text-white">
      <div class="flex flex-col md:flex-row items-center justify-between">
        <div class="mb-4 md:mb-0">
          <h1 class="text-2xl font-bold mb-2">Gestión de Proyectos</h1>
          <p class="text-blue-100">Administra los proyectos de tu portfolio desde aquí.</p>
        </div>
        <button id="add-project-btn" class="px-4 py-2 bg-white text-blue-600 rounded-lg shadow hover:shadow-lg transition-all flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
          </svg>
          Añadir Proyecto
        </button>
      </div>
    </div>

    <!-- Tabla de proyectos -->
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden hover-card">
      <div class="p-4 border-b border-gray-200 dark:border-gray-700">
        <h2 class="text-lg font-semibold text-gray-900 dark:text-white">Listado de Proyectos</h2>
      </div>
      <div class="p-4">
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
            <thead class="bg-gray-50 dark:bg-gray-700">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Título</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Categoría</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Destacado</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Fecha</th>
                <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Acciones</th>
              </tr>
            </thead>
            <tbody id="projects-table" class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
              <tr>
                <td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400">
                  Cargando proyectos...
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal para añadir/editar proyecto -->
  <div id="project-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
      <div class="p-6 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
        <h3 id="modal-title" class="text-xl font-semibold text-gray-900 dark:text-white">Añadir Proyecto</h3>
        <button id="close-modal" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <form id="project-form" class="p-6 space-y-4">
        <input type="hidden" id="project-id">
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="space-y-2">
            <label for="title" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Título</label>
            <input type="text" id="title" name="title" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white" required>
          </div>
          
          <div class="space-y-2">
            <label for="category" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Categoría</label>
            <input type="text" id="category" name="category" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white" required>
          </div>
        </div>
        
        <div class="space-y-2">
          <label for="description" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Descripción Corta</label>
          <textarea id="description" name="description" rows="2" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white" required></textarea>
        </div>
        
        <div class="space-y-2">
          <label for="content" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Contenido Detallado</label>
          <textarea id="content" name="content" rows="4" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white" required></textarea>
        </div>
        
        <div class="space-y-2">
          <label for="imageUrl" class="block text-sm font-medium text-gray-700 dark:text-gray-300">URL de la Imagen</label>
          <input type="text" id="imageUrl" name="imageUrl" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white" required>
        </div>
        
        <div class="flex items-center">
          <input type="checkbox" id="featured" name="featured" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
          <label for="featured" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">Proyecto Destacado</label>
        </div>
        
        <div class="flex justify-end space-x-3 pt-4 border-t border-gray-200 dark:border-gray-700">
          <button type="button" id="cancel-project" class="px-4 py-2 bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors">
            Cancelar
          </button>
          <button type="submit" class="px-4 py-2 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 transition-colors">
            Guardar Proyecto
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Modal de confirmación para eliminar -->
  <div id="delete-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl max-w-md w-full mx-4">
      <div class="p-6 border-b border-gray-200 dark:border-gray-700">
        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Confirmar Eliminación</h3>
      </div>
      <div class="p-6">
        <p class="text-gray-700 dark:text-gray-300">¿Estás seguro de que deseas eliminar este proyecto? Esta acción no se puede deshacer.</p>
      </div>
      <div class="p-6 border-t border-gray-200 dark:border-gray-700 flex justify-end space-x-3">
        <button id="cancel-delete" class="px-4 py-2 bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors">
          Cancelar
        </button>
        <button id="confirm-delete" class="px-4 py-2 bg-gradient-to-r from-red-500 to-red-600 text-white rounded-lg hover:from-red-600 hover:to-red-700 transition-colors">
          Eliminar
        </button>
      </div>
    </div>
  </div>
</AdminLayout>

<script>
  const API_URL = import.meta.env.PUBLIC_API_URL || 'http://localhost:5000';
  let currentProjectId: string | null = null;
  
  // Definir interfaz para el tipo Project
  interface Project {
    _id: string;
    title: string;
    description: string;
    content: string;
    imageUrl: string;
    category: string;
    featured: boolean;
    createdAt: string;
  }

  // Función para verificar autenticación
  async function isAuthenticated() {
    const token = localStorage.getItem('token');
    if (!token) {
      console.log("No hay token, redirigiendo a login");
      window.location.href = '/admin/login';
      return false;
    }

    try {
      const response = await fetch(`${API_URL}/users/profile`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (!response.ok) {
        throw new Error('Error al verificar autenticación');
      }

      return true;
    } catch (error) {
      console.error("Error:", error);
      localStorage.removeItem('token');
      window.location.href = '/admin/login';
      return false;
    }
  }

  // Función para obtener el usuario actual
  function getCurrentUser() {
    return localStorage.getItem('token');
  }

  // Función para cargar proyectos
  async function loadProjects() {
    const token = getCurrentUser();
    if (!token) return;

    try {
      const response = await fetch(`${API_URL}/projects`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      if (!response.ok) {
        throw new Error('Error al cargar proyectos');
      }
      
      const data = await response.json();
      renderProjects(data.projects || []);
    } catch (error) {
      console.error("Error:", error);
      const projectsTable = document.getElementById('projects-table');
      if (projectsTable) {
        projectsTable.innerHTML = `
          <tr>
            <td colspan="5" class="px-6 py-4 text-center text-sm text-red-500">
              Error al cargar proyectos. Por favor, intenta de nuevo.
            </td>
          </tr>
        `;
      }
    }
  }

  // Función para renderizar proyectos en la tabla
  function renderProjects(projects: Project[]) {
    const projectsTable = document.getElementById('projects-table');
    if (!projectsTable) return;
    
    if (projects.length === 0) {
      projectsTable.innerHTML = `
        <tr>
          <td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400">
            No hay proyectos disponibles. ¡Añade tu primer proyecto!
          </td>
        </tr>
      `;
      return;
    }
    
    projectsTable.innerHTML = projects.map(project => {
      const date = new Date(project.createdAt).toLocaleDateString('es-ES', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric'
      });
      
      return `
        <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex items-center">
              <div class="h-10 w-10 flex-shrink-0 mr-3">
                <img class="h-10 w-10 rounded-md object-cover" src="${project.imageUrl || '/placeholder.jpg'}" alt="${project.title}">
              </div>
              <div class="text-sm font-medium text-gray-900 dark:text-white">${project.title}</div>
            </div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm text-gray-500 dark:text-gray-400">${project.category}</div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            ${project.featured 
              ? `<span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">Destacado</span>` 
              : `<span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">No</span>`
            }
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
            ${date}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
            <button class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300 mr-3 edit-project" data-id="${project._id}">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
              </svg>
            </button>
            <button class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300 delete-project" data-id="${project._id}">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
              </svg>
            </button>
          </td>
        </tr>
      `;
    }).join('');
    
    // Añadir event listeners a los botones de editar y eliminar
    document.querySelectorAll('.edit-project').forEach(button => {
      button.addEventListener('click', () => {
        const projectId = button.getAttribute('data-id');
        if (projectId) showEditModal(projectId);
      });
    });
    
    document.querySelectorAll('.delete-project').forEach(button => {
      button.addEventListener('click', () => {
        const projectId = button.getAttribute('data-id');
        if (projectId) showDeleteModal(projectId);
      });
    });
  }

  // Función para mostrar el modal de edición
  async function showEditModal(projectId: string) {
    const token = getCurrentUser();
    if (!token) return;
    
    try {
      const response = await fetch(`${API_URL}/projects/${projectId}`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      if (!response.ok) {
        throw new Error('Error al cargar el proyecto');
      }
      
      const project = await response.json();
      
      // Actualizar el título del modal
      const modalTitle = document.getElementById('modal-title');
      if (modalTitle) modalTitle.textContent = 'Editar Proyecto';
      
      // Rellenar el formulario con los datos del proyecto
      const projectIdInput = document.getElementById('project-id') as HTMLInputElement;
      const titleInput = document.getElementById('title') as HTMLInputElement;
      const categoryInput = document.getElementById('category') as HTMLInputElement;
      const descriptionInput = document.getElementById('description') as HTMLTextAreaElement;
      const contentInput = document.getElementById('content') as HTMLTextAreaElement;
      const imageUrlInput = document.getElementById('imageUrl') as HTMLInputElement;
      const featuredInput = document.getElementById('featured') as HTMLInputElement;
      
      if (projectIdInput) projectIdInput.value = project._id;
      if (titleInput) titleInput.value = project.title;
      if (categoryInput) categoryInput.value = project.category;
      if (descriptionInput) descriptionInput.value = project.description;
      if (contentInput) contentInput.value = project.content;
      if (imageUrlInput) imageUrlInput.value = project.imageUrl;
      if (featuredInput) featuredInput.checked = project.featured;
      
      // Guardar el ID del proyecto actual
      currentProjectId = project._id;
      
      // Mostrar el modal
      const modal = document.getElementById('project-modal');
      if (modal) modal.classList.remove('hidden');
    } catch (error) {
      console.error("Error:", error);
      alert('Error al cargar el proyecto. Por favor, intenta de nuevo.');
    }
  }

  // Función para mostrar el modal de eliminación
  function showDeleteModal(projectId: string) {
    currentProjectId = projectId;
    const modal = document.getElementById('delete-modal');
    if (modal) modal.classList.remove('hidden');
  }

  // Función para guardar un proyecto (crear o actualizar)
  async function saveProject(event: Event) {
    event.preventDefault();
    
    const token = getCurrentUser();
    if (!token) return;
    
    const projectIdInput = document.getElementById('project-id') as HTMLInputElement;
    const titleInput = document.getElementById('title') as HTMLInputElement;
    const categoryInput = document.getElementById('category') as HTMLInputElement;
    const descriptionInput = document.getElementById('description') as HTMLTextAreaElement;
    const contentInput = document.getElementById('content') as HTMLTextAreaElement;
    const imageUrlInput = document.getElementById('imageUrl') as HTMLInputElement;
    const featuredInput = document.getElementById('featured') as HTMLInputElement;
    
    const projectData = {
      title: titleInput.value,
      category: categoryInput.value,
      description: descriptionInput.value,
      content: contentInput.value,
      imageUrl: imageUrlInput.value,
      featured: featuredInput.checked
    };
    
    try {
      let url = `${API_URL}/projects`;
      let method = 'POST';
      
      // Si hay un ID, es una actualización
      if (projectIdInput.value) {
        url = `${API_URL}/projects/${projectIdInput.value}`;
        method = 'PUT';
      }
      
      const response = await fetch(url, {
        method,
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify(projectData)
      });
      
      if (!response.ok) {
        throw new Error('Error al guardar el proyecto');
      }
      
      // Cerrar el modal y recargar los proyectos
      const modal = document.getElementById('project-modal');
      if (modal) modal.classList.add('hidden');
      
      // Limpiar el formulario
      const form = document.getElementById('project-form') as HTMLFormElement;
      if (form) form.reset();
      
      // Recargar los proyectos
      loadProjects();
      
      // Mostrar mensaje de éxito
      alert(projectIdInput.value ? 'Proyecto actualizado con éxito' : 'Proyecto creado con éxito');
    } catch (error) {
      console.error("Error:", error);
      alert('Error al guardar el proyecto. Por favor, intenta de nuevo.');
    }
  }

  // Función para eliminar un proyecto
  async function deleteProject() {
    if (!currentProjectId) return;
    
    const token = getCurrentUser();
    if (!token) return;
    
    try {
      const response = await fetch(`${API_URL}/projects/${currentProjectId}`, {
        method: 'DELETE',
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      if (!response.ok) {
        throw new Error('Error al eliminar el proyecto');
      }
      
      // Cerrar el modal y recargar los proyectos
      const modal = document.getElementById('delete-modal');
      if (modal) modal.classList.add('hidden');
      
      // Recargar los proyectos
      loadProjects();
      
      // Mostrar mensaje de éxito
      alert('Proyecto eliminado con éxito');
    } catch (error) {
      console.error("Error:", error);
      alert('Error al eliminar el proyecto. Por favor, intenta de nuevo.');
    }
  }

  // Inicializar
  document.addEventListener('DOMContentLoaded', async () => {
    // Verificar autenticación
    const auth = await isAuthenticated();
    if (!auth) return;
    
    // Cargar proyectos
    loadProjects();
    
    // Event listeners para los botones
    const addProjectBtn = document.getElementById('add-project-btn');
    const closeModalBtn = document.getElementById('close-modal');
    const cancelProjectBtn = document.getElementById('cancel-project');
    const projectForm = document.getElementById('project-form');
    const cancelDeleteBtn = document.getElementById('cancel-delete');
    const confirmDeleteBtn = document.getElementById('confirm-delete');
    
    // Botón para añadir proyecto
    if (addProjectBtn) {
      addProjectBtn.addEventListener('click', () => {
        // Limpiar el formulario
        const form = document.getElementById('project-form') as HTMLFormElement;
        if (form) form.reset();
        
        // Actualizar el título del modal
        const modalTitle = document.getElementById('modal-title');
        if (modalTitle) modalTitle.textContent = 'Añadir Proyecto';
        
        // Limpiar el ID del proyecto
        const projectIdInput = document.getElementById('project-id') as HTMLInputElement;
        if (projectIdInput) projectIdInput.value = '';
        
        // Mostrar el modal
        const modal = document.getElementById('project-modal');
        if (modal) modal.classList.remove('hidden');
      });
    }
    
    // Botones para cerrar el modal de proyecto
    if (closeModalBtn) {
      closeModalBtn.addEventListener('click', () => {
        const modal = document.getElementById('project-modal');
        if (modal) modal.classList.add('hidden');
      });
    }
    
    if (cancelProjectBtn) {
      cancelProjectBtn.addEventListener('click', () => {
        const modal = document.getElementById('project-modal');
        if (modal) modal.classList.add('hidden');
      });
    }
    
    // Formulario para guardar proyecto
    if (projectForm) {
      projectForm.addEventListener('submit', saveProject);
    }
    
    // Botones para el modal de eliminación
    if (cancelDeleteBtn) {
      cancelDeleteBtn.addEventListener('click', () => {
        const modal = document.getElementById('delete-modal');
        if (modal) modal.classList.add('hidden');
      });
    }
    
    if (confirmDeleteBtn) {
      confirmDeleteBtn.addEventListener('click', deleteProject);
    }
  });
</script>

<style>
  .hover-card {
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .hover-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }
</style> 