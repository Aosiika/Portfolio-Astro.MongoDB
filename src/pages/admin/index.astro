---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { API_URL } from '../../api/config';

// Obtener la configuración actual
let config;
try {
  const response = await fetch(`${API_URL}/config`, {
    headers: {
      'Cache-Control': 'no-cache, no-store, must-revalidate',
      'Pragma': 'no-cache'
    }
  });
  config = await response.json();
} catch (error) {
  console.error('Error al cargar la configuración:', error);
  config = { modoMantenimiento: false };
}
---

<AdminLayout title="Dashboard">
  <div class="space-y-6">
    <!-- Resumen de estadísticas -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-5">
      <!-- Tarjeta de estadísticas: Proyectos -->
      <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 hover-card border-l-4 border-blue-500">
        <div class="flex items-center">
          <div class="p-3 rounded-full bg-gradient-to-br from-blue-400 to-blue-600 mr-4 shadow-md">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
            </svg>
          </div>
          <div>
            <p class="text-gray-500 dark:text-gray-400 text-sm font-medium uppercase">Proyectos</p>
            <p class="text-2xl font-bold text-gray-900 dark:text-white" id="projects-count">0</p>
            <p class="text-xs text-green-500 mt-1 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
              </svg>
              <span>+12% este mes</span>
            </p>
          </div>
        </div>
      </div>

      <!-- Tarjeta de estadísticas: Mensajes -->
      <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 hover-card border-l-4 border-green-500">
        <div class="flex items-center">
          <div class="p-3 rounded-full bg-gradient-to-br from-green-400 to-green-600 mr-4 shadow-md">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
            </svg>
          </div>
          <div>
            <p class="text-gray-500 dark:text-gray-400 text-sm font-medium uppercase">Mensajes</p>
            <p class="text-2xl font-bold text-gray-900 dark:text-white" id="messages-count">0</p>
            <p class="text-xs text-green-500 mt-1 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
              </svg>
              <span>+5% este mes</span>
            </p>
          </div>
        </div>
      </div>

      <!-- Tarjeta de estadísticas: Visitas -->
      <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 hover-card border-l-4 border-purple-500">
        <div class="flex items-center">
          <div class="p-3 rounded-full bg-gradient-to-br from-purple-400 to-purple-600 mr-4 shadow-md">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
            </svg>
          </div>
          <div>
            <p class="text-gray-500 dark:text-gray-400 text-sm font-medium uppercase">Visitas</p>
            <p class="text-2xl font-bold text-gray-900 dark:text-white" id="visits-count">0</p>
            <p class="text-xs text-green-500 mt-1 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
              </svg>
              <span>+18% este mes</span>
            </p>
          </div>
        </div>
      </div>

      <!-- Tarjeta de estadísticas: Estado -->
      <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 hover-card border-l-4 border-yellow-500">
        <div class="flex items-center">
          <div class="p-3 rounded-full bg-gradient-to-br from-yellow-400 to-yellow-600 mr-4 shadow-md">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
            </svg>
          </div>
          <div>
            <p class="text-gray-500 dark:text-gray-400 text-sm font-medium uppercase">Estado</p>
            <p class="text-2xl font-bold text-gray-900 dark:text-white" id="site-status">
              {config.modoMantenimiento ? 'Mantenimiento' : 'Activo'}
            </p>
            <p class={`text-xs mt-1 flex items-center ${config.modoMantenimiento ? 'text-yellow-500' : 'text-green-500'}`}>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                {config.modoMantenimiento 
                  ? <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                  : <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                }
              </svg>
              <span>{config.modoMantenimiento ? 'Sitio en mantenimiento' : '100% uptime'}</span>
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Bienvenida y resumen -->
    <div class="bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl shadow-lg p-6 text-white">
      <div class="flex flex-col md:flex-row items-center justify-between">
        <div class="mb-4 md:mb-0">
          <h2 class="text-2xl font-bold mb-2">¡Bienvenido al Dashboard!</h2>
          <p class="text-blue-100">Gestiona tu portfolio profesional desde este panel de control.</p>
        </div>
        <div class="flex space-x-2">
          <a href="/admin/proyectos" class="px-4 py-2 bg-white text-blue-600 rounded-lg shadow hover:shadow-lg transition-all">
            <i class="fas fa-plus mr-2"></i> Nuevo Proyecto
          </a>
          <a href="/admin/configuracion" class="px-4 py-2 bg-blue-700 text-white rounded-lg shadow hover:shadow-lg transition-all">
            <i class="fas fa-cog mr-2"></i> Configuración
          </a>
        </div>
      </div>
    </div>

    <!-- Control de Modo Mantenimiento -->
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 hover-card">
      <div class="flex justify-between items-center mb-4">
        <h2 class="text-lg font-semibold text-gray-900 dark:text-white">Modo Mantenimiento</h2>
        <button id="toggleMaintenance" class={`px-4 py-2 rounded-lg text-white ${config.modoMantenimiento ? 'bg-green-600 hover:bg-green-700' : 'bg-red-600 hover:bg-red-700'}`}>
          {config.modoMantenimiento ? 'Desactivar Mantenimiento' : 'Activar Mantenimiento'}
        </button>
      </div>
      <div class="flex items-center">
        <div class={`w-4 h-4 rounded-full mr-2 ${config.modoMantenimiento ? 'bg-yellow-500' : 'bg-green-500'}`}></div>
        <p class="text-gray-700 dark:text-gray-300">
          {config.modoMantenimiento 
            ? 'El sitio está actualmente en modo mantenimiento. Los visitantes verán una página de mantenimiento.' 
            : 'El sitio está activo y visible para todos los visitantes.'}
        </p>
      </div>
      {config.modoMantenimiento && (
        <div class="mt-4 p-4 bg-yellow-50 dark:bg-yellow-900/30 rounded-lg">
          <p class="text-yellow-800 dark:text-yellow-200 text-sm">
            <strong>Mensaje de mantenimiento:</strong> {config.mensajeMantenimiento || 'Estamos realizando mejoras. Por favor, vuelve más tarde.'}
          </p>
        </div>
      )}
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <!-- Proyectos recientes -->
      <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden hover-card">
        <div class="p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
          <h2 class="text-lg font-semibold text-gray-900 dark:text-white">Proyectos Recientes</h2>
          <a href="/admin/proyectos" class="text-sm text-blue-600 dark:text-blue-400 hover:underline">Ver todos</a>
        </div>
        <div class="p-4">
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
              <thead class="bg-gray-50 dark:bg-gray-700">
                <tr>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Nombre</th>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Categoría</th>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Estado</th>
                </tr>
              </thead>
              <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700" id="recent-projects">
                <tr>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400" colspan="3">Cargando proyectos...</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>

      <!-- Mensajes recientes -->
      <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden hover-card">
        <div class="p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
          <h2 class="text-lg font-semibold text-gray-900 dark:text-white">Mensajes Recientes</h2>
          <a href="/admin/mensajes" class="text-sm text-blue-600 dark:text-blue-400 hover:underline">Ver todos</a>
        </div>
        <div class="p-4">
          <div class="space-y-4" id="recent-messages">
            <div class="p-4 text-center text-gray-500 dark:text-gray-400">
              Cargando mensajes...
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Actividad reciente -->
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 hover-card">
      <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Actividad Reciente</h2>
      <div class="space-y-4">
        <div class="flex">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 rounded-full bg-blue-100 dark:bg-blue-900 flex items-center justify-center">
              <i class="fas fa-plus text-blue-600 dark:text-blue-400"></i>
            </div>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-900 dark:text-white">Nuevo proyecto añadido</p>
            <p class="text-xs text-gray-500 dark:text-gray-400">Hace 2 horas</p>
          </div>
        </div>
        <div class="flex">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 rounded-full bg-green-100 dark:bg-green-900 flex items-center justify-center">
              <i class="fas fa-envelope text-green-600 dark:text-green-400"></i>
            </div>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-900 dark:text-white">Nuevo mensaje recibido</p>
            <p class="text-xs text-gray-500 dark:text-gray-400">Hace 5 horas</p>
          </div>
        </div>
        <div class="flex">
          <div class="flex-shrink-0">
            <div class="w-8 h-8 rounded-full bg-purple-100 dark:bg-purple-900 flex items-center justify-center">
              <i class="fas fa-edit text-purple-600 dark:text-purple-400"></i>
            </div>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-900 dark:text-white">Proyecto actualizado</p>
            <p class="text-xs text-gray-500 dark:text-gray-400">Hace 1 día</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</AdminLayout>

<script define:vars={{ config }}>
  const API_URL = import.meta.env.PUBLIC_API_URL || 'http://localhost:5000';
  
  // Definir interfaces para los datos
  interface Project {
    _id: string;
    title: string;
    category: string;
    status: string;
    createdAt: string;
  }

  interface Message {
    _id: string;
    name: string;
    email: string;
    message: string;
    createdAt: string;
    isRead: boolean;
  }

  // Función para verificar autenticación
  async function checkAuth() {
    const token = localStorage.getItem('token');
    if (!token) {
      console.log("Usuario no autenticado, redirigiendo a login");
      window.location.href = '/admin/login';
      return false;
    }

    try {
      const response = await fetch(`${API_URL}/users/profile`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (!response.ok) {
        throw new Error('Error al verificar autenticación');
      }

      return true;
    } catch (error) {
      console.error("Error:", error);
      localStorage.removeItem('token');
      window.location.href = '/admin/login';
      return false;
    }
  }

  // Función para cargar estadísticas
  async function loadStats() {
    const token = localStorage.getItem('token');
    if (!token) return;

    try {
      // Cargar conteo de proyectos
      const projectsResponse = await fetch(`${API_URL}/projects`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      if (projectsResponse.ok) {
        const projectsData = await projectsResponse.json();
        const projectsCount = document.getElementById('projects-count');
        if (projectsCount && projectsData.projects) {
          projectsCount.textContent = projectsData.projects.length.toString();
        }
      }

      // Cargar conteo de mensajes
      const messagesResponse = await fetch(`${API_URL}/messages`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      if (messagesResponse.ok) {
        const messagesData = await messagesResponse.json();
        const messagesCount = document.getElementById('messages-count');
        if (messagesCount && messagesData.messages) {
          messagesCount.textContent = messagesData.messages.length.toString();
        }
      }

      // Simular conteo de visitas (esto debería venir de una API de analytics)
      const visitsCount = document.getElementById('visits-count');
      if (visitsCount) {
        visitsCount.textContent = Math.floor(Math.random() * 1000).toString();
      }

    } catch (error) {
      console.error("Error al cargar estadísticas:", error);
    }
  }

  // Función para cargar proyectos recientes
  async function loadRecentProjects() {
    const token = localStorage.getItem('token');
    if (!token) return;

    try {
      const response = await fetch(`${API_URL}/projects?limit=5`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      if (!response.ok) {
        throw new Error('Error al cargar proyectos recientes');
      }
      
      const data = await response.json();
      const projectsContainer = document.getElementById('recent-projects');
      
      if (projectsContainer && data.projects) {
        if (data.projects.length === 0) {
          projectsContainer.innerHTML = `
            <tr>
              <td colspan="3" class="px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400">
                No hay proyectos disponibles
              </td>
            </tr>
          `;
          return;
        }
        
        projectsContainer.innerHTML = data.projects.slice(0, 5).map((project: Project) => {
          return `
            <tr>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center">
                  <div class="text-sm font-medium text-gray-900 dark:text-white">${project.title}</div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-500 dark:text-gray-400">${project.category}</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">
                  Activo
                </span>
              </td>
            </tr>
          `;
        }).join('');
      }
    } catch (error) {
      console.error("Error:", error);
      const projectsContainer = document.getElementById('recent-projects');
      if (projectsContainer) {
        projectsContainer.innerHTML = `
          <tr>
            <td colspan="3" class="px-6 py-4 text-center text-sm text-red-500">
              Error al cargar proyectos. Por favor, intenta de nuevo.
            </td>
          </tr>
        `;
      }
    }
  }

  // Función para cargar mensajes recientes
  async function loadRecentMessages() {
    const token = localStorage.getItem('token');
    if (!token) return;

    try {
      const response = await fetch(`${API_URL}/messages?limit=3`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      if (!response.ok) {
        throw new Error('Error al cargar mensajes recientes');
      }
      
      const data = await response.json();
      const messagesContainer = document.getElementById('recent-messages');
      
      if (messagesContainer && data.messages) {
        if (data.messages.length === 0) {
          messagesContainer.innerHTML = `
            <div class="p-4 text-center text-sm text-gray-500 dark:text-gray-400">
              No hay mensajes disponibles
            </div>
          `;
          return;
        }
        
        messagesContainer.innerHTML = data.messages.slice(0, 3).map((message: Message) => {
          const date = new Date(message.createdAt);
          const formattedDate = date.toLocaleDateString('es-ES', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
          });
          
          return `
            <div class="p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
              <div class="flex justify-between items-start">
                <div>
                  <h3 class="text-sm font-semibold text-gray-900 dark:text-white">${message.name}</h3>
                  <p class="text-xs text-gray-500 dark:text-gray-400">${message.email}</p>
                </div>
                <span class="text-xs text-gray-500 dark:text-gray-400">${formattedDate}</span>
              </div>
              <p class="mt-2 text-sm text-gray-600 dark:text-gray-300 line-clamp-2">${message.message}</p>
              <div class="mt-2 flex justify-end">
                <a href="/admin/mensajes" class="text-xs text-blue-600 dark:text-blue-400 hover:underline">Ver mensaje</a>
              </div>
            </div>
          `;
        }).join('');
      }
    } catch (error) {
      console.error("Error:", error);
      const messagesContainer = document.getElementById('recent-messages');
      if (messagesContainer) {
        messagesContainer.innerHTML = `
          <div class="p-4 text-center text-sm text-red-500">
            Error al cargar mensajes. Por favor, intenta de nuevo.
          </div>
        `;
      }
    }
  }

  // Función para alternar el modo mantenimiento
  async function toggleMaintenance() {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        alert('No hay token de autenticación. Inicia sesión primero.');
        return;
      }
      
      // Invertir el estado actual
      const updatedConfig = {
        ...config,
        modoMantenimiento: !config.modoMantenimiento
      };
      
      console.log('Enviando actualización:', updatedConfig);
      
      const response = await fetch('/api/config', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`,
          'Cache-Control': 'no-cache, no-store, must-revalidate',
          'Pragma': 'no-cache'
        },
        body: JSON.stringify(updatedConfig)
      });
      
      if (!response.ok) {
        const errorText = await response.text();
        throw new Error(`Error: ${response.status} - ${errorText}`);
      }
      
      const result = await response.json();
      console.log('Respuesta recibida:', result);
      
      alert(`Modo mantenimiento ${updatedConfig.modoMantenimiento ? 'activado' : 'desactivado'} correctamente`);
      
      // Refrescar la página
      window.location.reload();
    } catch (error) {
      console.error('Error:', error);
      alert(`Error: ${error instanceof Error ? error.message : String(error)}`);
    }
  }

  // Inicializar
  document.addEventListener('DOMContentLoaded', async () => {
    const isAuthenticated = await checkAuth();
    if (isAuthenticated) {
      loadStats();
      loadRecentProjects();
      loadRecentMessages();
      
      // Configurar el botón de modo mantenimiento
      const toggleBtn = document.getElementById('toggleMaintenance');
      if (toggleBtn) {
        toggleBtn.addEventListener('click', toggleMaintenance);
      }
    }
  });
</script> 