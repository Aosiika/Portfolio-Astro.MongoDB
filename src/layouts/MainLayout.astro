---
interface Props {
  title: string;
  description?: string;
}

interface Config {
  navbarTitle: string;
  githubUrl?: string;
  youtubeUrl?: string;
  twitterUrl?: string;
}

const API_URL = import.meta.env.PUBLIC_API_URL || 'http://localhost:5000';

// Obtener la configuración del backend con cache-busting
const timestamp = new Date().getTime();
let config: Config = { navbarTitle: 'Portfolio' }; // Valor por defecto

try {
  const response = await fetch(`${API_URL}/config?t=${timestamp}`);
  if (response.ok) {
    config = await response.json();
  }
} catch (error) {
  console.error('Error al cargar la configuración:', error);
}

const { title, description = "Portfolio personal" } = Astro.props;
---

<!DOCTYPE html>
<html lang="es" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <!-- Prevenir el caché del navegador -->
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
  </head>
  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-white transition-colors duration-300">
    <header class="fixed w-full top-0 z-50 bg-white/90 dark:bg-gray-900/90 backdrop-blur-md shadow-sm transition-all duration-300">
      <nav class="container mx-auto px-4 py-4">
        <div class="flex justify-between items-center">
          <a href="#inicio" class="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent transition-all duration-300 hover:scale-105" id="navbarTitle">{config.navbarTitle || "Portfolio"}</a>
          <div class="hidden md:flex space-x-8 items-center">
            <a href="#inicio" class="nav-link relative hover:text-blue-600 dark:hover:text-blue-400 transition-colors py-2">
              Inicio
              <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 transition-all duration-300 group-hover:w-full"></span>
            </a>
            <a href="#sobre-mi" class="nav-link relative hover:text-blue-600 dark:hover:text-blue-400 transition-colors py-2">
              Sobre Mí
              <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 transition-all duration-300 group-hover:w-full"></span>
            </a>
            <a href="#portfolio" class="nav-link relative hover:text-blue-600 dark:hover:text-blue-400 transition-colors py-2">
              Portfolio
              <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 transition-all duration-300 group-hover:w-full"></span>
            </a>
            <a href="#contacto" class="nav-link relative hover:text-blue-600 dark:hover:text-blue-400 transition-colors py-2">
              Contacto
              <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 transition-all duration-300 group-hover:w-full"></span>
            </a>
            <button id="themeToggle" class="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 transition-all duration-300 hover:scale-110">
              <svg class="w-6 h-6 dark:hidden" fill="currentColor" viewBox="0 0 20 20">
                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
              </svg>
              <svg class="w-6 h-6 hidden dark:block" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"></path>
              </svg>
            </button>
          </div>
          <!-- Menú móvil (hamburguesa) -->
          <button class="md:hidden p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-all duration-300" id="mobileMenuButton">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          </button>
        </div>
        <!-- Menú móvil desplegable -->
        <div class="md:hidden hidden transform transition-all duration-300 ease-in-out" id="mobileMenu">
          <div class="flex flex-col space-y-4 pt-4 pb-3">
            <a href="#inicio" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors pl-2 border-l-2 border-transparent hover:border-blue-600 dark:hover:border-blue-400">Inicio</a>
            <a href="#sobre-mi" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors pl-2 border-l-2 border-transparent hover:border-blue-600 dark:hover:border-blue-400">Sobre Mí</a>
            <a href="#portfolio" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors pl-2 border-l-2 border-transparent hover:border-blue-600 dark:hover:border-blue-400">Portfolio</a>
            <a href="#contacto" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors pl-2 border-l-2 border-transparent hover:border-blue-600 dark:hover:border-blue-400">Contacto</a>
            <button id="mobileThemeToggle" class="flex items-center hover:text-blue-600 dark:hover:text-blue-400 transition-colors pl-2 border-l-2 border-transparent hover:border-blue-600 dark:hover:border-blue-400">
              <span class="mr-2 dark:hidden">Modo Oscuro</span>
              <span class="mr-2 hidden dark:inline">Modo Claro</span>
              <svg class="w-5 h-5 dark:hidden" fill="currentColor" viewBox="0 0 20 20">
                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
              </svg>
              <svg class="w-5 h-5 hidden dark:block" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"></path>
              </svg>
            </button>
          </div>
        </div>
      </nav>
    </header>

    <main class="pt-20">
      <slot />
    </main>

    <footer class="bg-gray-100 dark:bg-gray-800 mt-12">
      <div class="container mx-auto px-4 py-8">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <p class="mb-4 md:mb-0">&copy; {new Date().getFullYear()} Portfolio Personal. Todos los derechos reservados.</p>
          <div class="flex space-x-4">
            <a href={config.githubUrl || "https://github.com/tuusuario"} target="_blank" rel="noopener noreferrer" class="text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors hover:scale-110">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
              </svg>
            </a>
            <a href={config.youtubeUrl || "https://youtube.com/@tucanal"} target="_blank" rel="noopener noreferrer" class="text-gray-600 dark:text-gray-300 hover:text-red-600 dark:hover:text-red-400 transition-colors hover:scale-110">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
              </svg>
            </a>
            <a href={config.twitterUrl || "https://x.com/tuusuario"} target="_blank" rel="noopener noreferrer" class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white transition-colors hover:scale-110">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </footer>

    <script define:vars={{ API_URL }}>
      // Tema oscuro/claro
      const theme = localStorage.getItem('theme') || 
        (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
      
      document.documentElement.classList.toggle('dark', theme === 'dark');

      function toggleTheme() {
        const isDark = document.documentElement.classList.toggle('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      }

      // Event listeners para los botones de tema
      document.getElementById('themeToggle')?.addEventListener('click', toggleTheme);
      document.getElementById('mobileThemeToggle')?.addEventListener('click', toggleTheme);

      // Función para actualizar el título del navbar
      async function updateNavbarTitle() {
        try {
          const timestamp = new Date().getTime();
          const response = await fetch(`${API_URL}/config?t=${timestamp}`, {
            headers: {
              'Accept': 'application/json',
              'Cache-Control': 'no-cache, no-store, must-revalidate',
              'Pragma': 'no-cache',
              'Expires': '0'
            }
          });
          
          if (!response.ok) {
            throw new Error(`Error al obtener la configuración: ${response.status}`);
          }
          
          const data = await response.json();
          const navbarTitle = document.getElementById('navbarTitle');
          
          if (navbarTitle && data.navbarTitle) {
            navbarTitle.textContent = data.navbarTitle;
          }
        } catch (error) {
          console.error('Error al actualizar el título:', error);
        }
      }

      // Actualizar título al cargar la página
      document.addEventListener('DOMContentLoaded', updateNavbarTitle);

      // Actualizar título cuando la página vuelve a estar visible
      document.addEventListener('visibilitychange', () => {
        if (document.visibilityState === 'visible') {
          updateNavbarTitle();
        }
      });

      // Actualizar título periódicamente (cada 5 segundos)
      const titleInterval = setInterval(updateNavbarTitle, 5000);

      // Limpiar el intervalo cuando la página se oculta
      document.addEventListener('visibilitychange', () => {
        if (document.visibilityState === 'hidden') {
          clearInterval(titleInterval);
        }
      });

      // Menú móvil
      const mobileMenuButton = document.getElementById('mobileMenuButton');
      const mobileMenu = document.getElementById('mobileMenu');

      mobileMenuButton?.addEventListener('click', () => {
        mobileMenu?.classList.toggle('hidden');
        // Añadir animación de deslizamiento
        if (!mobileMenu?.classList.contains('hidden')) {
          mobileMenu?.classList.add('opacity-100', 'translate-y-0');
          mobileMenu?.classList.remove('opacity-0', '-translate-y-10');
        } else {
          mobileMenu?.classList.add('opacity-0', '-translate-y-10');
          mobileMenu?.classList.remove('opacity-100', 'translate-y-0');
        }
      });

      // Cerrar menú móvil al hacer clic en un enlace
      document.querySelectorAll('#mobileMenu a').forEach(link => {
        link.addEventListener('click', () => {
          mobileMenu?.classList.add('hidden');
        });
      });

      // Cambiar estilo del navbar al hacer scroll
      window.addEventListener('scroll', () => {
        const header = document.querySelector('header');
        if (window.scrollY > 50) {
          header?.classList.add('py-2', 'shadow-md');
          header?.classList.remove('py-4', 'shadow-sm');
        } else {
          header?.classList.add('py-4', 'shadow-sm');
          header?.classList.remove('py-2', 'shadow-md');
        }
      });

      // Resaltar enlace activo según la sección visible
      const sections = document.querySelectorAll('section[id]');
      const navLinks = document.querySelectorAll('.nav-link');

      window.addEventListener('scroll', () => {
        let current = '';
        sections.forEach(section => {
          const sectionTop = section.getBoundingClientRect().top + window.scrollY;
          const sectionHeight = section.clientHeight;
          if (window.scrollY >= sectionTop - 200) {
            const sectionId = section.getAttribute('id');
            if (sectionId) {
              current = sectionId;
            }
          }
        });

        navLinks.forEach(link => {
          link.classList.remove('text-blue-600', 'dark:text-blue-400');
          const href = link.getAttribute('href');
          if (href && href.substring(1) === current) {
            link.classList.add('text-blue-600', 'dark:text-blue-400');
          }
        });
      });

      // Scroll suave para los enlaces internos
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
          e.preventDefault();
          const href = this.getAttribute('href');
          if (href) {
            document.querySelector(href)?.scrollIntoView({
              behavior: 'smooth'
            });
          }
        });
      });
    </script>
  </body>
</html> 